/*
 * DocServer
 * More Info available on https://www.doctag.de
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.doctag.docsrv_api.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.doctag.docsrv_api.model.ZonedDateTime;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DoctagSignatureData
 */
@JsonPropertyOrder({
  DoctagSignatureData.JSON_PROPERTY_DOCUMENT_HASH,
  DoctagSignatureData.JSON_PROPERTY_DOCUMENT_URL,
  DoctagSignatureData.JSON_PROPERTY_KEY_FINGERPRINT,
  DoctagSignatureData.JSON_PROPERTY_PREVIOUS_SIGNATURES_HASH,
  DoctagSignatureData.JSON_PROPERTY_RANDOM_BUFFER,
  DoctagSignatureData.JSON_PROPERTY_SIGNATURE,
  DoctagSignatureData.JSON_PROPERTY_SIGNING_DOCTAG_INSTANCE,
  DoctagSignatureData.JSON_PROPERTY_SIGNING_USER,
  DoctagSignatureData.JSON_PROPERTY_VALID_FROM,
  DoctagSignatureData.JSON_PROPERTY_VALID_FROM_DATE_TIME,
  DoctagSignatureData.JSON_PROPERTY_WORKFLOW_HASH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DoctagSignatureData {
  public static final String JSON_PROPERTY_DOCUMENT_HASH = "documentHash";
  private String documentHash;

  public static final String JSON_PROPERTY_DOCUMENT_URL = "documentUrl";
  private String documentUrl;

  public static final String JSON_PROPERTY_KEY_FINGERPRINT = "keyFingerprint";
  private String keyFingerprint;

  public static final String JSON_PROPERTY_PREVIOUS_SIGNATURES_HASH = "previousSignaturesHash";
  private String previousSignaturesHash;

  public static final String JSON_PROPERTY_RANDOM_BUFFER = "randomBuffer";
  private String randomBuffer;

  public static final String JSON_PROPERTY_SIGNATURE = "signature";
  private String signature;

  public static final String JSON_PROPERTY_SIGNING_DOCTAG_INSTANCE = "signingDoctagInstance";
  private String signingDoctagInstance;

  public static final String JSON_PROPERTY_SIGNING_USER = "signingUser";
  private String signingUser;

  public static final String JSON_PROPERTY_VALID_FROM = "validFrom";
  private String validFrom;

  public static final String JSON_PROPERTY_VALID_FROM_DATE_TIME = "validFromDateTime";
  private ZonedDateTime validFromDateTime;

  public static final String JSON_PROPERTY_WORKFLOW_HASH = "workflowHash";
  private String workflowHash;


  public DoctagSignatureData documentHash(String documentHash) {
    this.documentHash = documentHash;
    return this;
  }

   /**
   * Get documentHash
   * @return documentHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentHash() {
    return documentHash;
  }


  public void setDocumentHash(String documentHash) {
    this.documentHash = documentHash;
  }


  public DoctagSignatureData documentUrl(String documentUrl) {
    this.documentUrl = documentUrl;
    return this;
  }

   /**
   * Get documentUrl
   * @return documentUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentUrl() {
    return documentUrl;
  }


  public void setDocumentUrl(String documentUrl) {
    this.documentUrl = documentUrl;
  }


  public DoctagSignatureData keyFingerprint(String keyFingerprint) {
    this.keyFingerprint = keyFingerprint;
    return this;
  }

   /**
   * Get keyFingerprint
   * @return keyFingerprint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_KEY_FINGERPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyFingerprint() {
    return keyFingerprint;
  }


  public void setKeyFingerprint(String keyFingerprint) {
    this.keyFingerprint = keyFingerprint;
  }


  public DoctagSignatureData previousSignaturesHash(String previousSignaturesHash) {
    this.previousSignaturesHash = previousSignaturesHash;
    return this;
  }

   /**
   * Get previousSignaturesHash
   * @return previousSignaturesHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREVIOUS_SIGNATURES_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviousSignaturesHash() {
    return previousSignaturesHash;
  }


  public void setPreviousSignaturesHash(String previousSignaturesHash) {
    this.previousSignaturesHash = previousSignaturesHash;
  }


  public DoctagSignatureData randomBuffer(String randomBuffer) {
    this.randomBuffer = randomBuffer;
    return this;
  }

   /**
   * Get randomBuffer
   * @return randomBuffer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RANDOM_BUFFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRandomBuffer() {
    return randomBuffer;
  }


  public void setRandomBuffer(String randomBuffer) {
    this.randomBuffer = randomBuffer;
  }


  public DoctagSignatureData signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }


  public DoctagSignatureData signingDoctagInstance(String signingDoctagInstance) {
    this.signingDoctagInstance = signingDoctagInstance;
    return this;
  }

   /**
   * Get signingDoctagInstance
   * @return signingDoctagInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIGNING_DOCTAG_INSTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSigningDoctagInstance() {
    return signingDoctagInstance;
  }


  public void setSigningDoctagInstance(String signingDoctagInstance) {
    this.signingDoctagInstance = signingDoctagInstance;
  }


  public DoctagSignatureData signingUser(String signingUser) {
    this.signingUser = signingUser;
    return this;
  }

   /**
   * Get signingUser
   * @return signingUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIGNING_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSigningUser() {
    return signingUser;
  }


  public void setSigningUser(String signingUser) {
    this.signingUser = signingUser;
  }


  public DoctagSignatureData validFrom(String validFrom) {
    this.validFrom = validFrom;
    return this;
  }

   /**
   * Get validFrom
   * @return validFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALID_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidFrom() {
    return validFrom;
  }


  public void setValidFrom(String validFrom) {
    this.validFrom = validFrom;
  }


  public DoctagSignatureData validFromDateTime(ZonedDateTime validFromDateTime) {
    this.validFromDateTime = validFromDateTime;
    return this;
  }

   /**
   * Get validFromDateTime
   * @return validFromDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALID_FROM_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ZonedDateTime getValidFromDateTime() {
    return validFromDateTime;
  }


  public void setValidFromDateTime(ZonedDateTime validFromDateTime) {
    this.validFromDateTime = validFromDateTime;
  }


  public DoctagSignatureData workflowHash(String workflowHash) {
    this.workflowHash = workflowHash;
    return this;
  }

   /**
   * Get workflowHash
   * @return workflowHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORKFLOW_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkflowHash() {
    return workflowHash;
  }


  public void setWorkflowHash(String workflowHash) {
    this.workflowHash = workflowHash;
  }


  /**
   * Return true if this DoctagSignatureData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DoctagSignatureData doctagSignatureData = (DoctagSignatureData) o;
    return Objects.equals(this.documentHash, doctagSignatureData.documentHash) &&
        Objects.equals(this.documentUrl, doctagSignatureData.documentUrl) &&
        Objects.equals(this.keyFingerprint, doctagSignatureData.keyFingerprint) &&
        Objects.equals(this.previousSignaturesHash, doctagSignatureData.previousSignaturesHash) &&
        Objects.equals(this.randomBuffer, doctagSignatureData.randomBuffer) &&
        Objects.equals(this.signature, doctagSignatureData.signature) &&
        Objects.equals(this.signingDoctagInstance, doctagSignatureData.signingDoctagInstance) &&
        Objects.equals(this.signingUser, doctagSignatureData.signingUser) &&
        Objects.equals(this.validFrom, doctagSignatureData.validFrom) &&
        Objects.equals(this.validFromDateTime, doctagSignatureData.validFromDateTime) &&
        Objects.equals(this.workflowHash, doctagSignatureData.workflowHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentHash, documentUrl, keyFingerprint, previousSignaturesHash, randomBuffer, signature, signingDoctagInstance, signingUser, validFrom, validFromDateTime, workflowHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DoctagSignatureData {\n");
    sb.append("    documentHash: ").append(toIndentedString(documentHash)).append("\n");
    sb.append("    documentUrl: ").append(toIndentedString(documentUrl)).append("\n");
    sb.append("    keyFingerprint: ").append(toIndentedString(keyFingerprint)).append("\n");
    sb.append("    previousSignaturesHash: ").append(toIndentedString(previousSignaturesHash)).append("\n");
    sb.append("    randomBuffer: ").append(toIndentedString(randomBuffer)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    signingDoctagInstance: ").append(toIndentedString(signingDoctagInstance)).append("\n");
    sb.append("    signingUser: ").append(toIndentedString(signingUser)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validFromDateTime: ").append(toIndentedString(validFromDateTime)).append("\n");
    sb.append("    workflowHash: ").append(toIndentedString(workflowHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

